name: nextjs-cloud-run

on:
  push:
    branches:
      - main

env:
  CLOUD_RUN_PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  CLOUD_RUN_REGION: us-east1
  # project-name but it can be anything you want
  REPO_NAME: over-engineering-blog

jobs:
  test:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci --save-dev
      - run: npm run build --if-present
      - run: npm test

  tag-build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout latest code in main
        uses: actions/checkout@v2

      # This step is where our service account will be authenticated
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
          service_account_key: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}
          service_account_email: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_EMAIL }}

      - name: Enable the necessary APIs and enable docker auth
        run: |-
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud --quiet auth configure-docker

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set release tag
        uses: actions/setup-node@v2
        env:
          RELEASE_TAG: ${{ npm run --silen get-version }}

      - name: Push tag to GitHub
        shell: bash
        run: git tag $RELEASE_TAG && git push --tags

      - name: Generate node environment file
        shell: bash
        run: |-
          touch .env.production
          echo "NEXT_PUBLIC_SANITY_PROJECT_ID=${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}" >> .env.production
          echo "NEXT_PUBLIC_SANITY_DATASET=${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}" >> .env.production
          echo "SANITY_API_TOKEN=${{ secrets.SANITY_API_TOKEN }}" >> .env.production
          echo "SANITY_PREVIEW_SECRET=${{ secrets.SANITY_PREVIEW_SECRET }}" >> .env.production

      - name: Build and tag image
        run: |-
          docker build . --tag "gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$RELEASE_TAG"

      - name: Push image to GCR
        run: |-
          docker push gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$RELEASE_TAG

      - name: Deploy
        run: |-
          gcloud components install beta --quiet
          gcloud beta run deploy $REPO_NAME --image gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
            --project $CLOUD_RUN_PROJECT_ID \
            --platform managed \
            --region $CLOUD_RUN_REGION \
            --allow-unauthenticated \
            --quiet
